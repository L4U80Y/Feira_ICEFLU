"""
Django settings for feira_iceflu_project project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import dj_database_url
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# CHAVE SECRETA
# ATENÇÃO: mantenha a chave secreta usada em produção em segredo!
# Use uma variável de ambiente no Render e um fallback seguro para desenvolvimento local.
SECRET_KEY = os.environ.get('SECRET_KEY', 'uma-chave-secreta-padrao-para-desenvolvimento-se-nao-definida')

# MODO DEBUG
# ATENÇÃO: nunca rode com debug ligado em produção!
# DEBUG será False se a variável de ambiente RENDER estiver definida (ou seja, no Render)
# e True caso contrário (ou seja, localmente, a menos que você defina RENDER localmente).
DEBUG = 'RENDER' not in os.environ

ALLOWED_HOSTS = []

# Render define a variável de ambiente RENDER_EXTERNAL_HOSTNAME
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
    # Se você tiver um domínio customizado no futuro, adicione-o aqui também,
    # de preferência lendo de outra variável de ambiente.
    # Ex: MY_CUSTOM_DOMAIN = os.environ.get('MY_CUSTOM_DOMAIN')
    # if MY_CUSTOM_DOMAIN:
    #     ALLOWED_HOSTS.append(MY_CUSTOM_DOMAIN)
else:
    # Para desenvolvimento local, se RENDER_EXTERNAL_HOSTNAME não estiver definida
    ALLOWED_HOSTS.extend(['127.0.0.1', 'localhost'])


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'feira_app.apps.FeiraAppConfig', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'feira_iceflu_project.urls'

LOGIN_REDIRECT_URL = '/produtos/' 

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'feira_iceflu_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# Sobrescreve a configuração do banco de dados se DATABASE_URL estiver definida (no Render)
DATABASE_URL_RENDER = os.environ.get('DATABASE_URL')
if DATABASE_URL_RENDER:
    DATABASES['default'] = dj_database_url.config(
        default=DATABASE_URL_RENDER,
        conn_max_age=600, # Opcional: tempo de vida da conexão
        ssl_require=True   # Render geralmente requer SSL para conexões de DB
    )

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles' # <--- Onde o collectstatic irá copiar os arquivos estáticos para o deploy

# Opcional, mas recomendado para melhor performance com WhiteNoise:
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
